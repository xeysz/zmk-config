/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define GAME    1
#define FN      2
#define SYM     3
#define NAV     4

#define LWRKSPC LG(LC(LEFT))
#define RWRKSPC LG(LC(RIGHT))

#define SPOTLGT LG(SPACE)
#define DISCMUT LG(F13) // discord mute
#define NVDAOLY LG(F16) //nvidia overlay

// TODO: windows only? osx layer?
#define Z_UNDO  &tr LC(Z) Z
#define C_COPY  &tr LC(C) C
#define X_CUT   &tr LC(X) X
#define V_PASTE &tr LC(V) V

/ {
    behaviors {
        tr: tap-release-preferred {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            label = "TAP_RELEASE_PREFERRED";
            flavor = "tap-preferred";
            tapping-term-ms = <175>;
            bindings = <&kp>, <&kp>;
        };
    };
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESC   &kp N1 &kp N2             &kp N3   &kp N4    &kp N5                             &kp N6   &kp N7   &kp N8    &kp N9   &kp N0    &caps_word
&kp TAB   &kp Q  &kp W              &kp E    &kp R     &kp T                              &kp Y    &kp U    &kp I     &kp O    &kp P     &kp LBKT
&kp BSPC  &kp A  &kp S              &kp D    &kp F     &kp G                              &kp H    &kp J    &kp K     &kp L    &kp SEMI  &kp SQT
&kp LSHFT Z_UNDO X_CUT              C_COPY   V_PASTE   &kp B      &kp K_LOCK    &kp C_PP  &kp N    &kp M    &kp COMMA &kp DOT  &kp SLASH &kp RSHFT
                 &mt LCTRL GRAVE    &kp LALT &kp LGUI  &kp SPACE  &kp SPOTLGT   &kp RET   &mo NAV  &mo SYM  &mo FN    &kp RCTRL
            >;

            // format is &inc_dep_kp counter-clockwise-action clockwise-action ...
            sensor-bindings = <&inc_dec_kp LWRKSPC RWRKSPC &inc_dec_kp PG_UP PG_DN>;
        };

        gaming_layer {
            bindings = <
&trans  &trans  &trans  &trans     &trans    &trans                              &trans  &trans  &trans  &trans  &trans  &kp F13
&trans  &trans  &trans  &trans     &trans    &trans                              &trans  &trans  &trans  &trans  &trans  &kp F14
&trans  &trans  &trans  &trans     &trans    &trans                              &trans  &trans  &trans  &trans  &trans  &kp F15
&trans  &kp Z   &kp X   &kp C      &kp V     &trans  &kp DISCMUT    &kp NVDAOLY  &trans  &trans  &trans  &trans  &trans  &kp F16
                &trans  &kp LCTRL  &kp LALT  &trans  &trans         &trans       &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        fn_layer {
            bindings = <
&trans  &trans  &trans  &trans   &trans    &trans                              &trans  &trans  &trans  &trans  &trans  &kp F13
&trans  &kp F1  &kp F2  &kp F3   &kp F4    &trans                              &trans  &trans  &trans  &trans  &trans  &kp F14
&trans  &kp F5  &kp F6  &kp F7   &kp F8    &trans                              &trans  &trans  &trans  &trans  &trans  &kp F15
&trans  &kp F9  &kp F10 &kp F11  &kp F12   &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans  &kp F16
                &trans  &trans   &trans    &trans  &trans              &trans  &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        sym_layer {
            bindings = <
&trans  &trans  &trans  &trans   &trans    &trans                              &trans  &trans    &trans    &trans   &trans    &trans
&trans  &trans  &trans  &trans   &trans    &trans                              &trans  &kp LPAR  &kp RPAR  &kp LBRC &kp RBRC  &trans
&trans  &trans  &trans  &trans   &trans    &trans                              &trans  &kp MINUS &kp EQUAL &kp LBKT &kp RBKT  &trans
&trans  &trans  &trans  &trans   &trans    &trans  &trans              &trans  &trans  &trans    &trans    &trans   &kp BSLH  &trans
                &trans  &trans   &trans    &trans  &trans              &trans  &trans  &trans    &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        nav_layer {
            bindings = <
&bt BT_CLR      &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                              &tog GAME &trans    &trans   &trans    &trans     &kp CLCK
&out OUT_TOG    &trans       &trans       &trans       &trans       &trans                                    &trans    &kp HOME  &kp UP   &kp END   &kp PSCRN  &trans
&kp DEL         &trans       &trans       &trans       &trans       &trans                                    &trans    &kp LEFT  &kp DOWN &kp RIGHT &trans     &trans
&trans          &kp LC(Z)    &kp LC(X)    &kp LC(C)    &kp LC(V)    &trans        &kp C_SLEEP_MODE &kp C_MUTE &trans    &kp PG_UP &trans   &kp PG_DN &trans     &trans
                             &trans       &trans       &trans       &trans        &trans           &trans     &trans    &trans    &trans   &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
    };
};
